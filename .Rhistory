setwd("C:/Users/angela/Desktop/SVN/Angela/Coursera/Data_Science_Specialization/05-Reproducible_Research/Week_2_Project/RepData_PeerAssessment1")
rawdata<-read.csv(activity.zip)
ls
rawdata<-read.csv("activity.zip")
View(rawdata)
rawdata<-read.csv(unzip("activity.zip"))
View(rawdata)
summary(rawdata)
str(rawdata)
rawdata$date<-as.Date(rawdata$date)
str(rawdata)
rawdata<-read.csv(unzip("activity.zip"))
totals<-tapply(rawdata$steps,rawdata$date,sum,na.remove=TRUE)
totals
totals<-tapply(rawdata$steps,rawdata$date,sum,na.rm=TRUE)
totals
?hist
totals
mean(totals)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
intervalsteps
?plot)
?plot
str(intervalsteps)
intervalsteps$dimnames
dimnames(intervalsteps)
plot(dimnames(intervalsteps),intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
plot(x=dimnames(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
colnames(intervalsteps)
intervalsteps
plot(x=dimnames(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
dim(dimnames(intervalsteps))
str(intervalsteps)
summary(intervalsteps)
dimnames(intervalsteps)[1]
plot(x=dimnames(intervalsteps)[1],y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
intervalsteps[1]
names(intervalsteps)
plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
is.na(rawdata)
sum(is.na(rawdata))
intervalsteps
intervalsteps$2320
intervalsteps[2320]
intervalsteps[23]
intervalsteps["2320"]
imputed<-rawdata
imputed$steps[is.na(imputed$steps)]<-intervalsteps[as.character(imputed$steps[is.na(imputed$interval)])]
v<-c(0,1,2,3,4)
?repeat
x
rep
?rep
sum(unique(rawdata$date))
unique(rawdata$date)
rep(v,61)
length(unique(rawdata$date))
NumOfDays<-length(unique(rawdata$date))
repmeans<-rep(intervalsteps,NumOfDays)
length(repmeans)
length(rawdata$steps)
imputed<-rawdata
imputed[is.na(imputed$steps)]<-repmeans[is.na(imputed$steps)]
repmeans
repmeans[78]
repmeans[78]/2
imputed<-rawdata
repmeans[is.na(imputed$steps)]
repmeans[is.na(imputed$steps)]
imputed[is.na(imputed$steps)]
rawdata<-read.csv(unzip("activity.zip"))
head(rawdata)
summary(rawdata)
rawdata$date<-as.Date(rawdata$date)
totals<-tapply(rawdata$steps,rawdata$date,sum,na.rm=TRUE)
totals
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "Histogram of total steps per day")
totalmean<-mean(totals)
totalmedian<-median(totals)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
maxindex<-which.max(intervalsteps)
maxinterval<-names(intervalsteps)[maxindex]
maxval<-intervalsteps[maxindex]
sum(is.na(rawdata))
NumOfDays<-length(unique(rawdata$date))
repmeans<-rep(intervalsteps,NumOfDays)
imputed<-rawdata
imputed$steps[is.na(imputed$steps)]<-repmeans[is.na(imputed$steps)]
View(imputed)
mean(imputedtotals)
rawdata<-read.csv(unzip("activity.zip"))
head(rawdata)
summary(rawdata)
rawdata$date<-as.Date(rawdata$date)
totals<-tapply(rawdata$steps,rawdata$date,sum,na.rm=TRUE)
totals
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "Histogram of total steps per day")
totalmean<-mean(totals)
totalmedian<-median(totals)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
maxindex<-which.max(intervalsteps)
maxinterval<-names(intervalsteps)[maxindex]
maxval<-intervalsteps[maxindex]
sum(is.na(rawdata))
NumOfDays<-length(unique(rawdata$date))
repmeans<-rep(intervalsteps,NumOfDays)
imputed<-rawdata
imputed$steps[is.na(imputed$steps)]<-repmeans[is.na(imputed$steps)]
imputedtotals<-tapply(imputed$steps,imputed$date,sum,na.rm=TRUE)
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "Histogram of total steps per day (imputed)")
par(mfrow=c(1,2))
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "With NAs")
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "Imputed")
imputedmean<-mean(imputedtotals)
imputedmedian<-median(imputedtotals)
mean(imputedtotals)
median(imputedtotals)
?weekdays
weekdays(imputed$date[1])
weekdays(imputed$date)
Sys.setlocale("LC_TIME","English United States")
rawdata<-read.csv(unzip("activity.zip"))
head(rawdata)
summary(rawdata)
rawdata$date<-as.Date(rawdata$date)
totals<-tapply(rawdata$steps,rawdata$date,sum,na.rm=TRUE)
totals
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "Histogram of total steps per day")
totalmean<-mean(totals)
totalmedian<-median(totals)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
maxindex<-which.max(intervalsteps)
maxinterval<-names(intervalsteps)[maxindex]
maxval<-intervalsteps[maxindex]
sum(is.na(rawdata))
NumOfDays<-length(unique(rawdata$date))
repmeans<-rep(intervalsteps,NumOfDays)
imputed<-rawdata
imputed$steps[is.na(imputed$steps)]<-repmeans[is.na(imputed$steps)]
imputedtotals<-tapply(imputed$steps,imputed$date,sum,na.rm=TRUE)
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "Histogram of total steps per day (imputed)")
par(mfrow=c(1,2))
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "NAs removed")
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "NAs imputed")
imputedmean<-mean(imputedtotals)
imputedmedian<-median(imputedtotals)
#imputedmean$daytype<-
weekdays(imputed$date)
Sys.setlocale("LC_TIME","English United States")
Sys.setlocale("LC_TIME", "English")
Sys.setlocale("LC_TIME", "English")
rawdata<-read.csv(unzip("activity.zip"))
head(rawdata)
summary(rawdata)
rawdata$date<-as.Date(rawdata$date)
totals<-tapply(rawdata$steps,rawdata$date,sum,na.rm=TRUE)
totals
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "Histogram of total steps per day")
totalmean<-mean(totals)
totalmedian<-median(totals)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
maxindex<-which.max(intervalsteps)
maxinterval<-names(intervalsteps)[maxindex]
maxval<-intervalsteps[maxindex]
sum(is.na(rawdata))
NumOfDays<-length(unique(rawdata$date))
repmeans<-rep(intervalsteps,NumOfDays)
imputed<-rawdata
imputed$steps[is.na(imputed$steps)]<-repmeans[is.na(imputed$steps)]
imputedtotals<-tapply(imputed$steps,imputed$date,sum,na.rm=TRUE)
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "Histogram of total steps per day (imputed)")
par(mfrow=c(1,2))
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "NAs removed")
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "NAs imputed")
imputedmean<-mean(imputedtotals)
imputedmedian<-median(imputedtotals)
#imputedmean$daytype<-
weekdays(imputed$date)
unique(weekdays(imputed$date))
Sys.setlocale("LC_TIME", "English")
rawdata<-read.csv(unzip("activity.zip"))
head(rawdata)
summary(rawdata)
rawdata$date<-as.Date(rawdata$date)
totals<-tapply(rawdata$steps,rawdata$date,sum,na.rm=TRUE)
totals
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "Histogram of total steps per day")
totalmean<-mean(totals)
totalmedian<-median(totals)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
maxindex<-which.max(intervalsteps)
maxinterval<-names(intervalsteps)[maxindex]
maxval<-intervalsteps[maxindex]
sum(is.na(rawdata))
NumOfDays<-length(unique(rawdata$date))
repmeans<-rep(intervalsteps,NumOfDays)
imputed<-rawdata
imputed$steps[is.na(imputed$steps)]<-repmeans[is.na(imputed$steps)]
imputedtotals<-tapply(imputed$steps,imputed$date,sum,na.rm=TRUE)
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "Histogram of total steps per day (imputed)")
par(mfrow=c(1,2))
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "NAs removed")
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "NAs imputed")
imputedmean<-mean(imputedtotals)
imputedmedian<-median(imputedtotals)
daytype<-function(day){
weekend<-c("Saturday","Sunday")
noweekend<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
res<-"dummy"
if(is.element(day,weekend)){
res<-"Weekend"
}
else if(is.element(day,noweekend){
Sys.setlocale("LC_TIME", "English")
rawdata<-read.csv(unzip("activity.zip"))
head(rawdata)
summary(rawdata)
rawdata$date<-as.Date(rawdata$date)
totals<-tapply(rawdata$steps,rawdata$date,sum,na.rm=TRUE)
totals
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "Histogram of total steps per day")
totalmean<-mean(totals)
totalmedian<-median(totals)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
maxindex<-which.max(intervalsteps)
maxinterval<-names(intervalsteps)[maxindex]
maxval<-intervalsteps[maxindex]
sum(is.na(rawdata))
NumOfDays<-length(unique(rawdata$date))
repmeans<-rep(intervalsteps,NumOfDays)
imputed<-rawdata
imputed$steps[is.na(imputed$steps)]<-repmeans[is.na(imputed$steps)]
imputedtotals<-tapply(imputed$steps,imputed$date,sum,na.rm=TRUE)
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "Histogram of total steps per day (imputed)")
par(mfrow=c(1,2))
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "NAs removed")
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "NAs imputed")
imputedmean<-mean(imputedtotals)
imputedmedian<-median(imputedtotals)
daytype<-function(day){
weekend<-c("Saturday","Sunday")
noweekend<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
res<-"dummy"
if(is.element(day,weekend)){
res<-"Weekend"
}
else if(is.element(day,noweekend)){
res<-"Weekday"
}
else{
print("Error in weekday function.")
}
}
#imputedmean$daytype<-
daytype(weekdays(imputed$date[1]))
daytype<-function(day){
weekend<-c("Saturday","Sunday")
noweekend<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
res<-"dummy"
if(is.element(day,weekend)){
res<-"Weekend"
}
else if(is.element(day,noweekend)){
res<-"Weekday"
}
else{
print("Error in weekday function.")
}
return(res)
}
daytype(weekdays(imputed$date[1]))
Sys.setlocale("LC_TIME", "English")
rawdata<-read.csv(unzip("activity.zip"))
head(rawdata)
summary(rawdata)
rawdata$date<-as.Date(rawdata$date)
totals<-tapply(rawdata$steps,rawdata$date,sum,na.rm=TRUE)
totals
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "Histogram of total steps per day")
totalmean<-mean(totals)
totalmedian<-median(totals)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
maxindex<-which.max(intervalsteps)
maxinterval<-names(intervalsteps)[maxindex]
maxval<-intervalsteps[maxindex]
sum(is.na(rawdata))
NumOfDays<-length(unique(rawdata$date))
repmeans<-rep(intervalsteps,NumOfDays)
imputed<-rawdata
imputed$steps[is.na(imputed$steps)]<-repmeans[is.na(imputed$steps)]
imputedtotals<-tapply(imputed$steps,imputed$date,sum,na.rm=TRUE)
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "Histogram of total steps per day (imputed)")
par(mfrow=c(1,2))
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "NAs removed")
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "NAs imputed")
imputedmean<-mean(imputedtotals)
imputedmedian<-median(imputedtotals)
daytype<-function(day){
weekend<-c("Saturday","Sunday")
noweekend<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
res<-"dummy"
if(is.element(day,weekend)){
res<-"Weekend"
}
else if(is.element(day,noweekend)){
res<-"Weekday"
}
else{
print("Error in weekday function.")
}
return(res)
}
imputed$daytype<-daytype(weekdays(imputed$date))
unique(imputed$daytype)
imputed$daytype<-daytype(weekdays(imputed$date))
daytype<-function(day){
weekend<-c("Saturday","Sunday")
noweekend<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
res<-"dummy"
if(is.element(day,weekend)){
res<-"Weekend"
}
elseif(is.element(day,noweekend)){
daytype<-function(day){
weekend<-c("Saturday","Sunday")
noweekend<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
res<-"dummy"
if(is.element(day,weekend)){
res<-"Weekend"
}
else if(is.element(day,noweekend)){
res<-"Weekday"
}
else{
print("Error in weekday function.")
}
return(res)
}
daytype("Monday")
daytype("Sunday")
weekdays(imputed$date)
uniqueweekdays(imputed$date)
unique(weekdays(imputed$date))
daytype(weekdays(imputed$date))
sapply(weekdays(imputed$date),daytype)
unique(sapply(weekdays(imputed$date),daytype))
Sys.setlocale("LC_TIME", "English")
rawdata<-read.csv(unzip("activity.zip"))
head(rawdata)
summary(rawdata)
rawdata$date<-as.Date(rawdata$date)
totals<-tapply(rawdata$steps,rawdata$date,sum,na.rm=TRUE)
totals
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "Histogram of total steps per day")
totalmean<-mean(totals)
totalmedian<-median(totals)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
maxindex<-which.max(intervalsteps)
maxinterval<-names(intervalsteps)[maxindex]
maxval<-intervalsteps[maxindex]
sum(is.na(rawdata))
NumOfDays<-length(unique(rawdata$date))
repmeans<-rep(intervalsteps,NumOfDays)
imputed<-rawdata
imputed$steps[is.na(imputed$steps)]<-repmeans[is.na(imputed$steps)]
imputedtotals<-tapply(imputed$steps,imputed$date,sum,na.rm=TRUE)
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "Histogram of total steps per day (imputed)")
par(mfrow=c(1,2))
hist(totals,col="turquoise3",xlab = "Total steps per day",main = "NAs removed")
hist(imputedtotals,col="maroon3",xlab = "Total steps per day",main = "NAs imputed")
imputedmean<-mean(imputedtotals)
imputedmedian<-median(imputedtotals)
daytype<-function(day){
weekend<-c("Saturday","Sunday")
noweekend<-c("Monday","Tuesday","Wednesday","Thursday","Friday")
res<-"dummy"
if(is.element(day,weekend)){
res<-"Weekend"
}
else if(is.element(day,noweekend)){
res<-"Weekday"
}
else{
print("Error in weekday function.")
}
return(res)
}
imputed$daytype<-as.factor(sapply(weekdays(imputed$date),daytype))
library(ggplot2)
par(mfrow=c(1,1))
p<-ggplot(imputed, aes(x=interval,y=steps))+stat_summary(fun.y="mean",geom="bar")+facet_grid(.~daytype)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
library(ggplot2)
par(mfrow=c(1,1))
p<-ggplot(imputed, aes(x=interval,y=steps))+stat_summary(fun.y="mean",geom="bar")+facet_grid(.~daytype)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
#plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
p
print(p)
p<-ggplot(imputed, aes(x=interval,y=steps))+stat_summary(fun.y="mean",geom="line")+facet_grid(daytype~.)
intervalsteps<-tapply(rawdata$steps,rawdata$interval,mean,na.rm=TRUE)
p<-ggplot(imputed, aes(x=interval,y=steps))+stat_summary(fun.y="mean",geom="bar")+facet_grid(daytype~.)
print(p)
p<-ggplot(imputed, aes(x=interval,y=steps))+stat_summary(fun.y="mean",geom="line")+facet_grid(daytype~.)
print(p)
library(ggplot2)
par(mfrow=c(1,1))
p<-ggplot(imputed, aes(x=interval,y=steps))+stat_summary(fun.y="mean",geom="line",colour="maroon3")+facet_grid(daytype~.)
print(p)
#plot(x=names(intervalsteps),y=intervalsteps,col="turquoise3",type = "l",ylab="Average number of steps in interval", xlab = "Interval", main = "Average number of steps per interval")
library(ggplot2)
par(mfrow=c(1,1))
p<-ggplot(imputed, aes(x=interval,y=steps))+stat_summary(fun.y="mean",geom="line",colour="maroon3")+facet_grid(daytype~.)
print(p)
